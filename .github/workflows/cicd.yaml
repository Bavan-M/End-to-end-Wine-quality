name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:

  # -------- CI: Lint & Test -------- #
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔍 Lint Code (mocked)
        run: echo "Linting code..."  # Replace with: flake8 src/

      - name: ✅ Run Tests (mocked)
        run: echo "Running tests..."  # Replace with: pytest tests/

  # -------- CD: Build & Push to ECR -------- #
  build-and-push:
    name: Build & Push Docker Image
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Install Docker Utilities
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq unzip

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 🐳 Build & Push Docker Image to ECR
        run: |
          echo "🔧 Registry: ${{ steps.login-ecr.outputs.registry }}"
          echo "🔧 Repo:     ${{ secrets.ECR_REPOSITORY_NAME }}"

          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

  # -------- CD: Deploy on EC2 (Self-hosted runner) -------- #
  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 📥 Pull Latest Docker Image
        run: |
          docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: 🧼 Stop and Remove Old Container (if running)
        run: |
          docker ps -q --filter "name=cnncls" | grep -q . && docker stop cnncls && docker rm -fv cnncls || echo "No running container to stop."

      - name: 🚀 Run New Docker Container
        run: |
          docker run -d -p 8080:8080 --name=cnncls \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: 🧹 Clean Up Docker Resources
        run: docker system prune -f
